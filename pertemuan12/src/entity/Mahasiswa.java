package entity;
// Generated May 20, 2022 12:39:17 PM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.List;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import util.utils;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * Mahasiswa generated by hbm2java
 */
public class Mahasiswa implements java.io.Serializable {

    static final String DB_URL = "jdbc:mysql://localhost:3306/tm12?zeroDateTimeBehavior=convertToNull";
    static final String USER = "root";
    static final String PASS = "123456";
    static final String QUERY = "SELECT * FROM Mahasiswa";

    private String nim;
    private String namaMh;
    private String kodeMk;
    private String nidDs;

    public Mahasiswa() {
    }

    public Mahasiswa(String nim, String namaMh, String kodeMk, String nidDs) {
        this.nim = nim;
        this.namaMh = namaMh;
        this.kodeMk = kodeMk;
        this.nidDs = nidDs;
    }

    public String getNim() {
        return this.nim;
    }

    public void setNim(String nim) {
        this.nim = nim;
    }

    public String getNamaMh() {
        return this.namaMh;
    }

    public void setNamaMh(String namaMh) {
        this.namaMh = namaMh;
    }

    public String getKodeMk() {
        return this.kodeMk;
    }

    public void setKodeMk(String kodeMk) {
        this.kodeMk = kodeMk;
    }

    public String getNidDs() {
        return this.nidDs;
    }

    public void setNidDs(String nidDs) {
        this.nidDs = nidDs;
    }

    public static List<Mahasiswa> read() {
        List<Mahasiswa> listData = new ArrayList<>();
        Session session = utils.getSessionFactory().openSession();
        Transaction tran = null;
        try {
            tran = session.getTransaction();
            tran.begin();
            Query query = session.createQuery("from Mahasiswa");
            listData = query.list();
            tran.commit();
        } catch (RuntimeException e) {
            e.printStackTrace();
        } finally {
            session.flush();
            session.close();
        }
        return listData;
    }

    public static List<Mahasiswa> getAll() {
        // Open a connection
        List<Mahasiswa> listData = new ArrayList<>();

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(QUERY);) {
            while (rs.next()) {
                Mahasiswa mhs = new Mahasiswa();
                mhs.setNim(rs.getString("nim"));
                mhs.setNamaMh(rs.getString("nama_mh"));
                mhs.setKodeMk(rs.getString("kode_mk"));
                mhs.setNidDs(rs.getString("nid_ds"));
                listData.add(mhs);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        return listData;
    }

    public static List<Mahasiswa> dataByNim(int nim) {
        List<Mahasiswa> a = new ArrayList<>();
        Transaction tran = null;
        Session session = utils.getSessionFactory().openSession();

        try {
            tran = session.beginTransaction();
            a = session.createQuery("from Mahasiswa WHERE nim = " + nim).list();
        } catch (RuntimeException e) {
            e.printStackTrace();
        } finally {
            session.flush();
//            session.refresh(Mahasiswa);
            session.close();
        }

        return a;
    }

}
