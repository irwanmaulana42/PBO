/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package viewer;

import controller.DosenJpaController;
import controller.FakultasJpaController;
import controller.MahasiswaJpaController;
import controller.exceptions.NonexistentEntityException;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Dosen;
import model.Fakultas;
import model.Mahasiswa;

/**
 *
 * @author PRISMA
 */
public class viewMahasiswa extends javax.swing.JFrame {

    EntityManagerFactory objFactory = Persistence.createEntityManagerFactory("pm_pertemuan6_jar_1.0-SNAPSHOTPU");
//    EntityManager manager = objFactory.createEntityManager();
    Mahasiswa recordMhs = new Mahasiswa();
    MahasiswaJpaController jpa = new MahasiswaJpaController(objFactory);
    DosenJpaController jpaDosen = new DosenJpaController(objFactory);
    FakultasJpaController jpaFakultas = new FakultasJpaController(objFactory);

    /**
     * Creates new form viewMahasiswa
     */
    public viewMahasiswa() {
        initComponents();
        showTables();
        initilizeComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAngkatan = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        cbDosen = new javax.swing.JComboBox<>();
        cbFakultas = new javax.swing.JComboBox<>();
        txtNRP = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Input Data Master Mahasiswa");

        jLabel2.setText("NRP");

        jLabel3.setText("Nama");

        jLabel4.setText("Kode Dosen");

        jLabel5.setText("No. Angkatan");

        jLabel6.setText("Kode Fakultas");

        cbFakultas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnAdd.setText("New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NRP", "Nama", "Angkatan", "Kode Fakultas", "Kode Dosen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableList);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(244, 244, 244))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                            .addComponent(txtAngkatan)
                            .addComponent(cbDosen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbFakultas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNRP)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExit)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNRP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAngkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFakultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnAdd)
                    .addComponent(btnExit))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            String nrp = txtNRP.getText();
            String nama = txtNama.getText();
            int angkatan = Integer.parseInt(txtAngkatan.getText());
            String[] fakultas = cbFakultas.getSelectedItem().toString().split("-");
            String[] dosen = cbDosen.getSelectedItem().toString().split("-");
            recordMhs.setNrp(nrp);
            recordMhs.setNama(nama);
            recordMhs.setAngkatan(angkatan);
            recordMhs.setKodeFakultas(Integer.parseInt(fakultas[0].trim()));
            recordMhs.setKodeDosen(Integer.parseInt(dosen[0].trim()));
            jpa.create(recordMhs);
            JOptionPane.showMessageDialog(null, "Data berhasil di input");
            resetForm();
            showTables();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try {
            String nrp = txtNRP.getText();
            String nama = txtNama.getText();
            int angkatan = Integer.parseInt(txtAngkatan.getText());
            String[] fakultas = cbFakultas.getSelectedItem().toString().split("-");
            String[] dosen = cbDosen.getSelectedItem().toString().split("-");
            recordMhs.setNrp(nrp);
            recordMhs.setNama(nama);
            recordMhs.setAngkatan(angkatan);
            recordMhs.setKodeFakultas(Integer.parseInt(fakultas[0].trim()));
            recordMhs.setKodeDosen(Integer.parseInt(dosen[0].trim()));
            jpa.edit(recordMhs);
            JOptionPane.showMessageDialog(null, "Data berhasil di edit");
            resetForm();
            showTables();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String nrp = txtNRP.getText();
        
        try {
            if(!nrp.isEmpty()){
                jpa.destroy(nrp);
                JOptionPane.showMessageDialog(null, "Data berhasil di hapus");
                resetForm();
                showTables();
            }else{
                JOptionPane.showMessageDialog(null, "Harap pilih data yang ingin di hapus");
            }
        } catch (NonexistentEntityException | HeadlessException ex) {
            Logger.getLogger(ex.getMessage()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListMouseClicked
        // TODO add your handling code here:
        int column = 0;
        int row = tableList.getSelectedRow();
        String value = tableList.getModel().getValueAt(row, column).toString();
        System.out.println("SELECTED ROW: " + value);
        Mahasiswa mhs = jpa.findMahasiswa(value);
        Fakultas fakultas = jpaFakultas.findFakultas(mhs.getKodeFakultas());
        Dosen dosen = jpaDosen.findDosen(mhs.getKodeDosen());
        
        Object selectedFakultas = fakultas.getKode() + " - " + fakultas.getNama();
        Object selectedDosen = dosen.getKode() + " - " + dosen.getNama();

                
        btnAdd.setEnabled(false);
        txtNRP.setEditable(false);
        txtNRP.setText(mhs.getNrp());
        txtNama.setText(mhs.getNama());
        txtAngkatan.setText(Integer.toString(mhs.getAngkatan()));
        cbFakultas.getModel().setSelectedItem(selectedFakultas);
        cbDosen.getModel().setSelectedItem(selectedDosen);
    }//GEN-LAST:event_tableListMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void resetForm() {
        btnAdd.setEnabled(true);
        txtNRP.setEditable(true);
        txtNRP.setText("");
        txtNama.setText("");
        txtAngkatan.setText("");
        cbFakultas.setSelectedIndex(0);
        cbDosen.setSelectedIndex(0);
    }

    private void showTables() {
        String[] kolom = {"NRP", "Nama", "Angkatan", "Kode Fakultas", "Kode Dosen"};
        Object[][] objData = new Object[jpa.getMahasiswaCount()][4];
        int i = 0;

        for (Mahasiswa mhs : jpa.findMahasiswaEntities()) {
            Fakultas fakultas = jpaFakultas.findFakultas(mhs.getKodeFakultas());
            Dosen dosen = jpaDosen.findDosen(mhs.getKodeDosen());
            String[] arrData = {
                mhs.getNrp(),
                mhs.getNama(),
                String.valueOf(mhs.getAngkatan()),
                fakultas.getKode() + " - " + fakultas.getNama(),
                dosen.getKode() + " - " + dosen.getNama()
            };
            objData[i] = arrData;
            i++;
        }

        tableList.setModel(new DefaultTableModel(objData, kolom) {
            //membuat tabel tidak bisa diedit saat diklik
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewMahasiswa().setVisible(true);
            }
        });
    }

    private void initilizeComboBox() {
        String[] objFakultas = new String[jpaFakultas.getFakultasCount()];
        String[] objDosen = new String[jpaDosen.getDosenCount()];
        int indexFakultas = 0, indexDosen = 0;

        for (Fakultas item : jpaFakultas.findFakultasEntities()) {
            String arrData = item.getKode() + " - " + item.getNama();
            objFakultas[indexFakultas] = arrData;
            indexFakultas++;
        }

        for (Dosen item : jpaDosen.findDosenEntities()) {
            String arrData = item.getKode() + " - " + item.getNama();
            objDosen[indexDosen] = arrData;
            indexDosen++;
        }

        cbFakultas.setModel(new javax.swing.DefaultComboBoxModel<>(objFakultas));
        cbDosen.setModel(new javax.swing.DefaultComboBoxModel<>(objDosen));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JComboBox<String> cbDosen;
    private javax.swing.JComboBox<String> cbFakultas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField txtAngkatan;
    private javax.swing.JTextField txtNRP;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables
}
